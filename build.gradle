plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.asciidoctor.convert' version '1.5.3'
}

group = 'com.kustacks'
version = '1.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.session:spring-session:1.3.5.RELEASE'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	implementation 'io.sentry:sentry-spring-boot-starter:5.4.0'
	implementation 'io.sentry:sentry-logback:5.4.0'

	testImplementation 'junit:junit:4.13.1'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.jsoup:jsoup:1.14.3'

	implementation 'com.google.firebase:firebase-admin:8.1.0'
}

ext {
	snippetsDir = file 'build/generated-snippets'
}

test {
	outputs.dir snippetsDir
	useJUnit()

	testLogging {
		// test jvm의 standard out and standard error을 console에 출력한다.
		showStandardStreams = true
		showCauses = true
		showExceptions = true
		showStackTraces = true
		exceptionFormat = 'full'
	}
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
	attributes "snippets": snippetsDir,
				"version": version,
				"stylesheet": "asciitheme/clean.css"

	doFirst {
		println "=====Start asciidoctor"
		//asciidoctor 실행전 기존에 생성된 API 문서 삭제
		delete file('src/main/resources/static/docs/api-docs.html')
	}

	doLast {
		println "=====Finish asciidoctor"
	}
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/asciidoc/html5")
	// resources/static/docs 로 복사하여 서버가 돌아가고 있을때 /docs/index.html 로 접속하면 볼수 있음
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

bootJar {
	enabled = true
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}/html5") {
		into "static/docs"
	}
}

jar {
	enabled = false
	manifest {
		attributes 'Main-Class': 'com.kustacks.kuring.KuringApplication'
	}
}